generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  password  String
  isAdmin   Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  orders    Order[]
  messages  Message[]
}

model Product {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  price       Float
  imageUrl    String?
  stock       Stock?
  categoryId  Int
  category    Category      @relation(fields: [categoryId], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  restockHistory RestockHistory[]
  orderItems  OrderItem[]
}

model Stock {
  id         Int      @id @default(autoincrement())
  quantity   Int
  productId  Int      @unique
  product    Product  @relation(fields: [productId], references: [id])
  updatedAt  DateTime @updatedAt
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  products    Product[]
}

model Order {
  id         Int          @id @default(autoincrement())
  userId     Int
  user       User          @relation(fields: [userId], references: [id])
  totalPrice Float
  status     String        @default("Pending") 
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  orderItems OrderItem[]
  returns    Return[]
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  orderId    Int
  productId  Int
  quantity   Int
  price      Float // Price at the time of order
  order      Order   @relation(fields: [orderId], references: [id])
  product    Product @relation(fields: [productId], references: [id])
}

model Return {
  id         Int      @id @default(autoincrement())
  orderId    Int
  order      Order    @relation(fields: [orderId], references: [id])
  reason     String
  createdAt  DateTime @default(now())
}

model RestockHistory {
  id         Int      @id @default(autoincrement())
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
  quantity   Int
  createdAt  DateTime @default(now())
}

model Message {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  content    String
  createdAt  DateTime @default(now())
}
